version: '3'
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
          - "5672:5672"
          - "15672:15672"
  zipkin:
    image: openzipkin/zipkin-slim
    ports:
        - "5411:9411"


  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   volumes:
  #     - rabbitmqdata:/var/lib/rabbitmq
  #   ports:
  #     - "15672:15672"
  #     - "5672:5672"
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=rabbitmquser
  #     - RABBITMQ_DEFAULT_PASS=DEBmbwkSrzy9D1T9cJfa
      
  sqlserver:
    image: microsoft/mssql-server-linux:latest
    container_name: sqlserver
    volumes:
      - sqlserverdata:/var/opt/mssql 
    ports:
      - "1434:1433"
    environment:
      - ACCEPT_EULA=Y 
      - MSSQL_PID=Developer
      - SA_PASSWORD=8jkGh47hnDw89Haq8LN2

  mailserver:
    image: maildev/maildev
    container_name: mailserver
    ports:
      - "25:25"
      - "4000:80"

  logserver:
    image: datalust/seq:latest
    container_name: logserver
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y 

  vehiclemanagementapi:
    image: pitstop/vehiclemanagementapi:1.0
    build: 
      context: .
      dockerfile: VehicleManagementAPI/Dockerfile
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  vehiclemanagementapi-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", 
    "-app-id", "vehiclemanagement-api", 
    "-app-port", "5000",
    "-components-path", "/components",
    "-config", "/configuration/pitstop-config.yaml"]
    depends_on: 
        - vehiclemanagementapi
    network_mode: "service:vehiclemanagementapi"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  customermanagementapi:
    image: pitstop/customermanagementapi:1.0
    build: 
      context: .
      dockerfile: CustomerManagementAPI/Dockerfile
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5100"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  customermanagementapi-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", 
    "-app-id", "customermanagement-api", 
    "-app-port", "5100",
    "-components-path", "/components",
    "-config", "/configuration/pitstop-config.yaml"]
    depends_on: 
        - customermanagementapi
    network_mode: "service:customermanagementapi"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  workshopmanagementapi:
    image: pitstop/workshopmanagementapi:1.0
    build: 
      context: .
      dockerfile: WorkshopManagementAPI/Dockerfile
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5200"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  workshopmanagementapi-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", 
    "-app-id", "workshopmanagement-api", 
    "-app-port", "5200",
    "-components-path", "/components",
    "-config", "/configuration/pitstop-config.yaml"]
    depends_on: 
          - workshopmanagementapi
    network_mode: "service:workshopmanagementapi"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  # auditlogservice:
  #   image: pitstop/auditlogservice:1.0
  #   build: AuditlogService
  #   container_name: auditlogservice
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     - DOTNET_ENVIRONMENT=Production

  invoiceservice:
    image: pitstop/invoiceservice:1.0
    build: 
      context: .
      dockerfile: InvoiceService/Dockerfile
    depends_on:
      - rabbitmq
      - sqlserver
      - mailserver
    ports:
      - "5260"
    environment:
      - DOTNET_ENVIRONMENT=Production

  invoiceservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", 
    "-app-id", "invoiceservice-api", 
    "-app-port", "5260",
    "-components-path", "/components",
    "-config", "/configuration/pitstop-config.yaml"]
    depends_on: 
        - invoiceservice
    network_mode: "service:invoiceservice"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  notificationservice:
    image: pitstop/notificationservice:1.0
    build: 
      context: .
      dockerfile: NotificationService/Dockerfile
    depends_on:
      - rabbitmq
      - sqlserver
      - mailserver
    ports:
      - "5270"
    environment:
      - DOTNET_ENVIRONMENT=Production

  notificationservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", 
    "-app-id", "notificationservice-api", 
    "-app-port", "5270",
    "-components-path", "/components",
    "-config", "/configuration/pitstop-config.yaml"]
    depends_on: 
        - notificationservice
    network_mode: "service:notificationservice"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"


  # timeservice:
  #   image: pitstop/timeservice:1.0
  #   build: 
  #     context: .
  #     dockerfile: TimeService/Dockerfile
  #   depends_on:
  #     - rabbitmq
  #   # ports: 
  #   #  - "8800"
  #   environment:
  #     - DOTNET_ENVIRONMENT=Production

  # timeservice-dapr:
  #   image: "daprio/daprd:latest"
  #   command: ["./daprd", 
  #     "-app-id", "timeservice-worker", 
  #     # "-app-port", "8800",
  #     "-components-path", "/components",
  #     "-config", "/configuration/pitstop-config.yaml"]
  #   depends_on: 
  #     - timeservice
  #   network_mode: "service:timeservice"
  #   volumes:
  #     - "./dapr/components/:/components"
  #     - "./dapr/configuration/:/configuration"

  workshopmanagementeventhandler:
    image: pitstop/workshopmanagementeventhandler:1.0
    build: 
      context: .
      dockerfile: WorkshopManagementEventHandler/Dockerfile
    depends_on:
      - rabbitmq
      - sqlserver
    ports:
      - "5250"
    environment:
      - DOTNET_ENVIRONMENT=Production

  workshopmanagementeventhandler-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", 
    "-app-id", "workshopmanagementevent-handler", 
    "-app-port", "5250", 
    "-components-path", "/components", 
    "-config", "/configuration/pitstop-config.yaml"]
    depends_on: 
        - workshopmanagementeventhandler
    network_mode: "service:workshopmanagementeventhandler"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  webapp:
    image: pitstop/webapp:1.0
    build: WebApp
    container_name: webapp
    depends_on:
      - customermanagementapi
      - vehiclemanagementapi
      - workshopmanagementapi
    ports:
      - "7000:7000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production


  webapp-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", 
    "-app-id", "webapp", 
    "-app-port", "7000",
    "-components-path", "/components",
    "-config", "/configuration/pitstop-config.yaml"]
    depends_on: 
        - customermanagementapi
    network_mode: "service:webapp"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"
  


volumes:
  sqlserverdata:
    external: true    
  rabbitmqdata:
    external: true
